#include <ncurses/curses.h>
#include <iostream>
#include <fstream>
#include <string>
#include <windows.h>



using namespace std;
void mainMenu(WINDOW *menu_win);
string accountsFile = "ListAccount.txt";

void loading(WINDOW *menu_win){
	wclear(menu_win);
	box(menu_win, 0, 0);
mvprintw(11, 45, "Mohon Tunggu Sebentar...");
          	start_color();
			init_pair(1,COLOR_RED,COLOR_GREEN);
			mvprintw(13, 30, "------------------------------------------------------");
			mvprintw(14, 29, "|                                                      |");
			mvprintw(15, 30, "------------------------------------------------------");
			for(int jarak = 30; jarak<= 82; jarak++){
			attron (COLOR_PAIR(1));
			refresh();
			mvprintw(14,jarak, " ");
			Sleep(40);
	
}
attroff(COLOR_PAIR(1));
	clear();
	refresh();
	endwin();
}

const int LEVELS = 3;
const int tinggiMAP[LEVELS] = {11, 21, 23};
const int lebarMAP[LEVELS] = {11, 21, 29};
int pemainX = 1, pemainY = 1;
    int level_saatini = 0; 
    
char map[LEVELS][24][30] = {
    {
	"¦¦¦¦¦¦¦¦¦¦¦",
    "¦ ¦     ! ¦",
    "¦ ¦¦¦¦¦   ¦",
    "¦ ¦+¦     ¦",
    "¦ ¦ ¦ ¦ ¦ ¦",
    "¦     ¦ ¦ ¦",
    "¦¦¦¦¦¦¦ ¦ ¦",
    "¦ ¦     ¦ ¦",
    "¦ ¦ ¦ ¦ ¦ ¦",
    "¦*  ¦     ¦",
    "¦¦¦¦¦¦¦¦¦¦¦"
	},
    {
    "¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦",
    "¦     ¦             ¦",
    "¦¦¦¦¦ ¦ ¦¦¦¦¦ ¦¦¦¦¦ ¦",
    "¦   ¦ ¦  +¦   ¦     ¦",
    "¦ ¦ ¦ ¦ ¦ ¦ ¦ ¦ ¦¦¦¦¦",
    "¦ ¦   ¦ ¦ ¦ ¦ ¦ ¦   ¦",
    "¦ ¦¦¦¦¦¦¦¦¦ ¦ ¦ ¦ ¦ ¦",
    "¦ ¦          !  ¦ ¦ ¦",
    "¦ ¦ ¦¦¦¦¦¦¦ ¦¦¦¦¦¦¦ ¦",
    "¦   ¦   ¦   ¦       ¦",
    "¦¦¦¦¦¦¦¦¦ ¦ ¦ ¦ ¦ ¦ ¦",
    "¦         ¦   ¦   ¦ ¦",
    "¦ ¦¦¦¦¦ ¦ ¦ ¦ ¦ ¦ ¦¦¦",
    "¦ ¦ ¦   ¦  &¦   ¦   ¦",
    "¦ ¦ ¦ ¦ ¦ ¦ ¦ ¦¦¦¦¦ ¦",
    "¦ ¦     ¦ ¦ ¦ ¦$¦   ¦",
    "¦ ¦¦¦¦¦ ¦ ¦ ¦ ¦ ¦ ¦ ¦",
    "¦   ¦#    ¦     ¦   ¦",
    "¦ ¦ ¦ ¦ ¦ ¦¦¦¦¦¦¦¦¦ ¦",
    "¦!¦                *¦",
    "¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦"
    },
    {
    "¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦",
    "¦ ¦ ¦         ¦       ¦ ¦   ¦",
    "¦ ¦ ¦ ¦¦¦¦¦ ¦ ¦ ¦¦¦¦¦ ¦ ¦ ¦ ¦",
    "¦ ¦   ¦     ¦ ¦ ¦     ¦   ¦ ¦",
    "¦ ¦¦¦ ¦ ¦¦¦¦¦ ¦ ¦ ¦¦¦¦¦ ¦¦¦ ¦",
    "¦   ¦ ¦   ¦   ¦ ¦   ¦   ¦   ¦",
    "¦¦¦ ¦ ¦¦¦ ¦ ¦¦¦ ¦¦¦ ¦¦¦¦¦ ¦ ¦",
    "¦   ¦  $¦ ¦ ¦     ¦ ¦     ¦ ¦",
    "¦ ¦¦¦¦¦¦¦ ¦ ¦¦¦¦¦ ¦ ¦ ¦¦¦¦¦ ¦",
    "¦     ¦   ¦   ¦   ¦   ¦     ¦",
    "¦¦¦¦¦ ¦ ¦¦¦¦¦ ¦ ¦¦¦¦¦¦¦ ¦¦¦¦¦",
    "¦   ¦   ¦   ¦   ¦     ¦     ¦",
    "¦ ¦ ¦¦¦¦¦ ¦ ¦¦¦¦¦ ¦ ¦¦¦¦¦¦¦ ¦",
    "¦ ¦ ¦     ¦   ¦   ¦ ¦     ¦ ¦",
    "¦¦¦ ¦ ¦¦¦ ¦ ¦¦¦ ¦ ¦¦¦ ¦ ¦ ¦ ¦",
    "¦   ¦ ¦   ¦ ¦   ¦     ¦ ¦+¦ ¦",
    "¦ ¦ ¦ ¦ ¦¦¦¦¦ ¦¦¦¦¦¦¦¦¦ ¦ ¦ ¦",
    "¦ ¦ ¦ ¦   ¦   ¦       ¦ ¦ ¦ ¦",
    "¦ ¦¦¦ ¦¦¦ ¦ ¦¦¦ ¦¦¦ ¦ ¦ ¦¦¦ ¦",
    "¦ ¦   ¦ ¦ ¦ ¦*  ¦   ¦ ¦     ¦",
    "¦ ¦ ¦¦¦ ¦ ¦ ¦¦¦¦¦ ¦¦¦ ¦¦¦¦¦¦¦",
    "¦%      ¦         ¦      !  ¦",
    "¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦"
    }
};



void drawmap(int level) {
    for (int y = 0; y < tinggiMAP[level]; ++y) {
        for (int x = 0; x < lebarMAP[level]; ++x) {
            if (y == pemainY && x == pemainX){
                mvaddch(y, x, '@');
				
            }else{
                mvaddch(y, x, map[level][y][x]);
            
            }
        }
    }
}


void movePlayer(int dx, int dy, int level) {
    int newX = pemainX + dx;
    int newY = pemainY + dy;

 
    if (newY >= 0 && newY < tinggiMAP[level] && newX >= 0 && newX < lebarMAP[level] &&
        (map[level][newY][newX] == ' ' || map[level][newY][newX] == '*')) {
        pemainX = newX;
        pemainY = newY;
    }
}

void drawMenu(WINDOW *menu_win) {
	mvwprintw(menu_win, 1, 30, "       _ _ _ _     _       _     "  );
	mvwprintw(menu_win, 2, 30, "      () () |   | |     | |    ");  
	mvwprintw(menu_win, 3, 30, " _ __  | || |__ | | __ | |_  ");  
	mvwprintw(menu_win, 4, 30, "| '_ \\| | | | '_ \\| |/ ` | ' \\ ");  
	mvwprintw(menu_win, 5, 30, "| |) | | | | | | | | (| | | | |");  
	mvwprintw(menu_win, 6, 30, "| ./||||| |||\\,|| |_|");  
	mvwprintw(menu_win, 7, 30, "| |                              ");  
	mvwprintw(menu_win, 8, 30, "|_|                              ");  

    mvwprintw(menu_win, 12, 35, "Pilih Level:");
    mvwprintw(menu_win, 13, 35, "1. Level 1");
    mvwprintw(menu_win, 14, 35, "2. Level 2");
    mvwprintw(menu_win, 15, 35, "3. Level 3");
    mvwprintw(menu_win, 16, 35, "Tekan 'q' untuk keluar");

    wrefresh(menu_win);
    
    int ch;
    bool running = true;

    while (running) {
        ch = wgetch(menu_win);
        switch (ch) {
            case '1': level_saatini = 0; running = false;  break;
            case '2': level_saatini = 1; running = false;  break;
            case '3': level_saatini = 2; running = false;  break;
            case 'q': mainMenu(menu_win); 
        }
    }
    clear();
    refresh();
    
    bool gameRunning = true;
    PlaySound(TEXT("C:\\Users\\admin\\Documents\\lagu5.wav"), NULL, SND_FILENAME | SND_ASYNC | SND_LOOP);
    	mvwprintw(menu_win, 9, 25, "------------------------------------------");
        mvwprintw(menu_win, 10, 25, "          BANTU KAMI GOLEK UWONG          ");
        mvwprintw(menu_win, 11, 25, "                 PLAYER = @              ");
        mvwprintw(menu_win, 12, 25, "                 UWONG = *              ");
        mvwprintw(menu_win, 13,25, "------------------------------------------");
        mvwprintw(menu_win, 14,25, "      Tekan Apa Saja untuk melanjutkan");
		wrefresh(menu_win);
        wgetch(menu_win);
        wclear(menu_win);
        
    while(gameRunning) {	
        clear();
    
        drawmap(level_saatini);
        
         if (map[level_saatini][pemainY][pemainX] == '*') {
         	PlaySound(TEXT("C:\\Users\\admin\\Documents\\lagu6.wav"), NULL, SND_FILENAME | SND_ASYNC);
         	clear();
            mvprintw(11, 42, "Anda telah menyelesaikan misi!");
          	start_color();
			init_pair(1,COLOR_RED,COLOR_GREEN);
			mvprintw(13, 30, "------------------------------------------------------");
			mvprintw(14, 29, "|                                                      |");
			mvprintw(15, 30, "------------------------------------------------------");
			for(int jarak = 30; jarak<= 82; jarak++){
			attron (COLOR_PAIR(1));
			refresh();
			mvprintw(14,jarak, " ");
			Sleep(40);
	
	}
PlaySound(TEXT("C:\\Users\\admin\\Documents\\lagu4.wav"), NULL, SND_FILENAME | SND_ASYNC | SND_LOOP);
	attroff(COLOR_PAIR(1));
	clear();
	refresh();
          	box(menu_win, 0, 0);
			drawMenu(menu_win); 
			

   
        }
        
        refresh();

        int ch = getch();
        
        switch (ch) {
            case KEY_UP: 
		if (map[level_saatini][pemainY][pemainX] == ' ' || map[level_saatini][pemainY - 1][pemainX] == '*') {
		    movePlayer(0, -1, level_saatini);
			}
			break;
            case KEY_DOWN: 
				if (map[level_saatini][pemainY][pemainX] == ' ' || map[level_saatini][pemainY + 1][pemainX] == '*') {
			movePlayer(0, 1, level_saatini); 
			}
			break;
            case KEY_LEFT: 
			if (map[level_saatini][pemainY][pemainX] == ' ' || map[level_saatini][pemainY][pemainX - 1] == '*') {
			movePlayer(-1, 0, level_saatini);
			}
			break;
            case KEY_RIGHT: 
			if (map[level_saatini][pemainY][pemainX] == ' ' || map[level_saatini][pemainY][pemainX + 1] == '*') {
                movePlayer(1, 0, level_saatini);
            }
            break;
            
        }

    }
    
    
}

void golek(WINDOW *menu_win){
	mvprintw(1,10, " .----------------.  .----------------.  .----------------.  .----------------.  .----------------.");
	mvprintw(2,10, "| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |");
	mvprintw(3,10, "| |    __    | || |     __     | || |   __      | || |  ____   | || |  _  __   | |");
	mvprintw(4,10, "| |  .' _  |   | || |   .'    `.   | || |  |_   |     | || | |   _  |  | || | |_  ||_  _|  | |");
	mvprintw(5,10, "| | / .'   \\|   | || |  /  .--.  \\  | || |    | |       | || |   | |  \\|  | || |   | |/ /    | |");
	mvprintw(6,10, "| | | |    __  | || |  | |    | |  | || |    | |   _   | || |   |  |  _   | || |   |  _'.    | |");
	mvprintw(7,10, "| | \\ `._]  | | || |  \\  `--'  /  | || |   _| |/ |  | || |  _| |_/ |  | || |  _| |  \\ \\  | |");
	mvprintw(8,10, "| |  `.__.'   | || |   `._.'   | || |  |___|  | || | |___|  | || | |_||__| | |");
	mvprintw(9,10, "| |              | || |              | || |              | || |              | || |              | |");
	mvprintw(10,10,"| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |");
	mvprintw(11,10," '----------------'  '----------------'  '----------------'  '----------------'  '----------------' ");
	mvprintw(14,10," .----------------.  .----------------.  .----------------.  .-----------------. .----------------. ");
	mvprintw(15,10,"| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |");
	mvprintw(16,10,"| | __  __ | || | __  __ | || |     __     | || | __  __  | || |    ___    | |");
	mvprintw(17,10,"| ||_   ||   || || ||   ||   || || |   .'    `.   | || ||   \\|_   | | || |  .' __  |   | |");
	mvprintw(18,10,"| |  | |    | |  | || |  | | /\\ | |  | || |  /  .--.  \\  | || |  |   \\ | |   | || | / .'   \\_|   | |");
	mvprintw(19,10,"| |  | '    ' |  | || |  | |/  \\| |  | || |  | |    | |  | || |  | |\\ \\| |   | || | | |    __  | |");
	mvprintw(20,10,"| |   \\ `--' /   | || |  |   /\\   |  | || |  \\  `--'  /  | || | | |\\   |_  | || | \\ `._]  _| | |");
	mvprintw(21,10,"| |    `._.'    | || |  |/  \\|  | || |   `._.'   | || ||__|\\_| | || |  `.___.'   | |");
	mvprintw(22,10,"| |              | || |              | || |              | || |              | || |              | |");
	mvprintw(23,10,"| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |");
	mvprintw(24,10," '----------------'  '----------------'  '----------------'  '----------------'  '----------------' ");
	
	start_color();
	init_pair(1,COLOR_RED,COLOR_GREEN);


	for(int jarak = 10; jarak<= 109; jarak++){
	attron (COLOR_PAIR(1));
	refresh();
	mvprintw(27,jarak, " ");
	Sleep(20);
}
	attroff(COLOR_PAIR(1));
	clear();
	refresh();
	endwin();
	
}

void login_ncurses(WINDOW *menu_win) {
    string userLog, passLog, userData, savedPassword;
    ifstream myFile;
    bool exist = false;

    wclear(menu_win);
    box(menu_win, 0, 0);
    mvwprintw(menu_win, 1, 2, "---------------------------------------> LOGIN <---------------------------------------");


    mvwprintw(menu_win, 3, 2, "Masukkan Username : ");
    wrefresh(menu_win);
    echo();
    char username[50];
    wgetstr(menu_win, username);
    noecho();
    userLog = username;

    if (userLog.empty()) {
        mvwprintw(menu_win, 5, 2, "Username tidak boleh kosong!");
        wrefresh(menu_win);
        wgetch(menu_win);
        mainMenu(menu_win);
    }

    mvwprintw(menu_win, 5, 2, "Masukkan Password : ");
    wrefresh(menu_win);
    char password[50];
    wgetstr(menu_win, password);
    passLog = password;

    if (passLog.empty()) {
        mvwprintw(menu_win, 7, 2, "Password tidak boleh kosong!");
        wrefresh(menu_win);
        wgetch(menu_win);
        mainMenu(menu_win);
    }

    myFile.open(accountsFile);
    if (!myFile) {
        mvwprintw(menu_win, 7, 2, "Kesalahan dalam membaca list akun!");
        wrefresh(menu_win);
        wgetch(menu_win);
        mainMenu(menu_win);
    }

    while (myFile >> userData) {
        if (userData == userLog) {
            exist = true;
            break;
        }
    }
    myFile.close();
    clear();
    loading(menu_win);
    clear();

    if (!exist) {
    	mvwprintw(menu_win, 9, 25, "------------------------------------------");
        mvwprintw(menu_win, 10, 25, "          USERNAME TIDAK DITEMUKAN        ");
        mvwprintw(menu_win, 11, 25, "   Silakan periksa kembali username Anda. ");
        mvwprintw(menu_win, 12, 25, "------------------------------------------");
        mvwprintw(menu_win, 13, 25, "     Tekan Enter untuk kembali ke menu.");
        wrefresh(menu_win);
        clear();
        wgetch(menu_win);
        mainMenu(menu_win);
        return;
    }

   ifstream userFile(userLog + ".txt");
    if (userFile) {
        getline(userFile, savedPassword);
        userFile.close();
        clear();    

	if (passLog == savedPassword) {
            
            wrefresh(menu_win);
            
            clear();
            drawMenu(menu_win);
            
        } else {
            mvwprintw(menu_win, 9, 25, "------------------------------------------");
            mvwprintw(menu_win, 10, 25, "             PASSWORD SALAH!              ");
            mvwprintw(menu_win, 11, 25, "     Silakan coba lagi dengan benar.");
            mvwprintw(menu_win, 12, 25, "------------------------------------------");
            mvwprintw(menu_win, 13, 25, "    Tekan Enter untuk kembali ke menu.");
            wrefresh(menu_win);
        	clear();
        	wgetch(menu_win);
        	mainMenu(menu_win);
        	return;
        }
    } else {
        mvwprintw(menu_win, 7, 2, "Kesalahan: File password tidak ditemukan!");
    }

    wrefresh(menu_win);
    wgetch(menu_win);
}
